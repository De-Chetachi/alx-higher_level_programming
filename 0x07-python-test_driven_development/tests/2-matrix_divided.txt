The ``2-matrix_divided`` module

===============================

using ``matrix_divided``
_______________________________


First import ```matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> none_matrix = None
	>>> empty_matrix = []
	>>> empty_empty_matrix = [[], []]
	>>> mixed_ok_matrix = [[1, 2.0, 3],[4.0, 5, 6.0]]
	>>> mixed_bad_matrix = [[3 + 2j, "4.0", "3"],[5.0, "5.9", 9.0]]
	>>> mixed_size_matrix = [[1.9, 4.7, 3],[4.9, 5]]
	>>> div_correct_int = 3
	>>> div_correct_float = 3.00
	>>> div_incorect_type = "3"
	>>> div_incorect_value_int = -3
	>>> div_incorect_value_float = -3.0
	>>> div_zero = 0
	>>> matrix_divided(matrix, div_correct_int)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided(matrix, div_correct_float)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided(matrix, div_incorect_type)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, div_incorect_value_int)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

	>>> matrix_divided(matrix, div_zero)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	>>> matrix_divided(none_matrix, div_correct_int)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(none_matrix, div_correct_float)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(none_matrix, div_incorect_type)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(none_matrix, div_incorect_value_int)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(none_matrix, div_incorect_value_float)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(none_matrix, div_zero)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	>>> matrix_divided(empty_matrix, div_correct_int)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(empty_matrix, div_correct_float)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(empty_matrix, div_incorect_type)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(empty_matrix, div_incorect_value_int)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(empty_matrix, div_incorect_value_float)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(empty_matrix, div_zero)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	>>> matrix_divided(empty_empty_matrix, div_correct_int)
	[[], []]
	>>> matrix_divided(empty_empty_matrix, div_correct_float)
	[[], []]
	>>> matrix_divided(empty_empty_matrix, div_incorect_type)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(empty_empty_matrix, div_incorect_value_int)
	[[], []]
	>>> matrix_divided(empty_empty_matrix, div_incorect_value_float)
	[[], []]
	>>> matrix_divided(empty_empty_matrix, div_zero)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	>>> matrix_divided(mixed_ok_matrix, div_correct_int)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix_divided(mixed_ok_matrix, div_correct_float)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
